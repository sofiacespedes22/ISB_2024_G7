# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WIVWwmbYjqTGhL4cpoD3XK4DBLfu0NwH
"""

# -*- coding: utf-8 -*-
"""transformada wavelet.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_6UWXt6IxfnfCFkd0JOYlE4duxx9vAtD
"""

import numpy as np
import matplotlib.pyplot as plt
import pywt
from scipy.signal import find_peaks

emg_signals = np.genfromtxt("PruebaPulgar.txt", delimiter="\t",skip_header = 3, missing_values= 0)
# Extraemos la columna de la señal
chn = 5
emg_signal = emg_signals[:, chn]
emg_signal = emg_signal - np.mean(emg_signal)
Fs_emg = 500
Ts_emg = 1/Fs_emg
n_emg= len(emg_signal)
t_emg = np.arange(0,n_emg*Ts_emg,Ts_emg)

"""## Ploteamos las señales sin filtrar

## Ploteamos las señales sin filtrar
"""
plt.figure(figsize=(10, 8))
plt.xlim(10,12)
plt.ylim(-150,150)
plt.plot(t_emg, emg_signal, label="señal")      # graficamos la señal
plt.xlabel("Tiempo (s)")
plt.ylabel("Amplitud")
plt.legend(loc="upper right")
plt.title("Señal EMG Pulgar - Original")
plt.show()

n_level = 7
emg_coeffs = pywt.wavedec(emg_signal, 'sym3', level=n_level)

threshold = 16
emg_coeffs_thresh = [pywt.threshold(c, threshold, mode='soft') for c in emg_coeffs]

filtered_emg_signal = pywt.waverec(emg_coeffs_thresh, 'sym3')

plt.figure(figsize=(10, 8))
plt.plot(t_emg, filtered_emg_signal[:len(t_emg)])
plt.xlim(10,12)
plt.ylim(-150,150)
plt.title('Señal EMG Pulgar - Wavelet Transform')
plt.xlabel("Tiempo (s)")
plt.ylabel("Amplitud")
plt.tight_layout()
plt.show()